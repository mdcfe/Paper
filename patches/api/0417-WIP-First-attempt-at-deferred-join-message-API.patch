From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MD <1917406+mdcfe@users.noreply.github.com>
Date: Sat, 29 Apr 2023 20:50:15 +0100
Subject: [PATCH] WIP - First attempt at deferred join message API


diff --git a/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java b/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java
index 3e1e7cd0415509da4dd887db59efa55011b1dab4..5763c77e921240c2aeec04064e3b05c29f6a1c0f 100644
--- a/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java
@@ -11,16 +11,21 @@ import org.jetbrains.annotations.Nullable;
 public class PlayerJoinEvent extends PlayerEvent {
     private static final HandlerList handlers = new HandlerList();
     // Paper start
-    private net.kyori.adventure.text.Component joinMessage;
+    private @NotNull java.util.concurrent.CompletableFuture<net.kyori.adventure.text.@Nullable Component> joinMessage;
+    //private @NotNull java.util.concurrent.CompletableFuture<net.kyori.adventure.text.@Nullable Component> joinMessageGetter; // TODO: is this useful?
     public PlayerJoinEvent(@NotNull final Player playerJoined, @Nullable final net.kyori.adventure.text.Component joinMessage) {
         super(playerJoined);
-        this.joinMessage = joinMessage;
+        this.joinMessage = java.util.concurrent.CompletableFuture.completedFuture(joinMessage);
+        //this.joinMessageGetter = new java.util.concurrent.CompletableFuture<>(); // TODO: is this useful?
     }
 
     @Deprecated // Paper end
     public PlayerJoinEvent(@NotNull final Player playerJoined, @Nullable final String joinMessage) {
         super(playerJoined);
-        this.joinMessage = joinMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(joinMessage) : null; // Paper end
+        // Paper start
+        final net.kyori.adventure.text.Component message = joinMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(joinMessage) : null;
+        this.joinMessage = java.util.concurrent.CompletableFuture.completedFuture(message);
+        // Paper end
     }
 
     // Paper start
@@ -30,7 +35,7 @@ public class PlayerJoinEvent extends PlayerEvent {
      * @return string join message. Can be null
      */
     public net.kyori.adventure.text.@Nullable Component joinMessage() {
-        return this.joinMessage;
+        return this.joinMessage.getNow(null);
     }
 
     /**
@@ -39,6 +44,25 @@ public class PlayerJoinEvent extends PlayerEvent {
      * @param joinMessage join message. If null, no message will be sent
      */
     public void joinMessage(net.kyori.adventure.text.@Nullable Component joinMessage) {
+        this.joinMessage = java.util.concurrent.CompletableFuture.completedFuture(joinMessage);
+    }
+
+    /**
+     * Gets the future that will provide the join message to send to all online players
+     *
+     * @return string join message. Can be null
+     */
+    public @NotNull java.util.concurrent.CompletableFuture<net.kyori.adventure.text.@Nullable Component> joinMessageDeferred() {
+        //return joinMessageGetter; // TODO: is this useful?
+        return joinMessage;
+    }
+
+    /**
+     * Sets the join message to send to all online players
+     *
+     * @param joinMessage join message. If null, no message will be sent
+     */
+    public void joinMessage(java.util.concurrent.CompletableFuture<net.kyori.adventure.text.@Nullable Component> joinMessage) {
         this.joinMessage = joinMessage;
     }
     // Paper end
@@ -52,7 +76,10 @@ public class PlayerJoinEvent extends PlayerEvent {
     @Nullable
     @Deprecated // Paper
     public String getJoinMessage() {
-        return this.joinMessage == null ? null : net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.joinMessage); // Paper
+        // Paper start
+        final net.kyori.adventure.text.Component message = joinMessage.getNow(null);
+        return message == null ? null : net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(message);
+        // Paper end
     }
 
     /**
@@ -63,7 +90,10 @@ public class PlayerJoinEvent extends PlayerEvent {
      */
     @Deprecated // Paper
     public void setJoinMessage(@Nullable String joinMessage) {
-        this.joinMessage = joinMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(joinMessage) : null; // Paper
+        // Paper start
+        final net.kyori.adventure.text.Component message = joinMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(joinMessage) : null;
+        this.joinMessage = java.util.concurrent.CompletableFuture.completedFuture(message);
+        // Paper end
     }
 
     @NotNull
